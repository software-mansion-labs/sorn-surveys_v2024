{
  "dataAPI": {
    "surveys": {
      "state_of_react": {
        "react2023": {
          "new_apis": {
            "new_apis_pain_points": {
              "freeform": {
                "currentEdition": {
                  "completion": {
                    "count": 429,
                    "percentageSurvey": 3.3,
                    "total": 13003
                  },
                  "buckets": [
                    {
                      "count": 101,
                      "id": "react_server_components",
                      "percentageQuestion": 23.54,
                      "percentageSurvey": 0.78,
                      "entity": {
                        "name": "React Server Components",
                        "nameClean": "React Server Components",
                        "id": "react_server_components",
                        "entityType": "feature",
                        "homepage": {
                          "url": "https://nextjs.org/docs/getting-started/react-essentials#server-components"
                        },
                        "resources": [
                          {
                            "url": "https://www.joshwcomeau.com/react/server-components/",
                            "title": "Making Sense of React Server Components"
                          }
                        ]
                      }
                    },
                    {
                      "count": 51,
                      "id": "excessive_complexity",
                      "percentageQuestion": 11.89,
                      "percentageSurvey": 0.39,
                      "entity": {
                        "name": "Excessive complexity",
                        "nameClean": "Excessive complexity",
                        "description": "Too much complexity",
                        "descriptionClean": "Too much complexity",
                        "id": "excessive_complexity",
                        "entityType": "default"
                      }
                    },
                    {
                      "count": 43,
                      "id": "nextjs_issues",
                      "percentageQuestion": 10.02,
                      "percentageSurvey": 0.33,
                      "entity": {
                        "name": "Next.js issues",
                        "nameClean": "Next.js issues",
                        "id": "nextjs_issues",
                        "entityType": "default"
                      }
                    },
                    {
                      "count": 40,
                      "id": "server_actions",
                      "percentageQuestion": 9.32,
                      "percentageSurvey": 0.31,
                      "entity": {
                        "name": "Server Actions",
                        "nameClean": "Server Actions",
                        "id": "server_actions",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "export default function ServerComponent() {\n  async function myAction() {\n    'use server'\n    // ...\n  }\n}\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">ServerComponent</span>(<span class=\"hljs-params\"></span>) {\n  <span class=\"hljs-keyword\">async</span> <span class=\"hljs-keyword\">function</span> <span class=\"hljs-title function_\">myAction</span>(<span class=\"hljs-params\"></span>) {\n    <span class=\"hljs-string\">&#x27;use server&#x27;</span>\n    <span class=\"hljs-comment\">// ...</span>\n  }\n}"
                        },
                        "homepage": {
                          "url": "https://nextjs.org/docs/app/api-reference/functions/server-actions"
                        }
                      }
                    },
                    {
                      "count": 36,
                      "id": "form_issues",
                      "percentageQuestion": 8.39,
                      "percentageSurvey": 0.28,
                      "entity": {
                        "id": "form_issues",
                        "entityType": "default"
                      }
                    },
                    {
                      "count": 30,
                      "id": "suspense",
                      "percentageQuestion": 6.99,
                      "percentageSurvey": 0.23,
                      "entity": {
                        "name": "`<Suspense>`\n",
                        "nameHtml": "<code>&lt;Suspense&gt;</code>\n",
                        "nameClean": "Suspense",
                        "id": "suspense",
                        "entityType": "feature",
                        "example": {
                          "language": "jsx",
                          "code": "<Suspense fallback={<Loading />}>\n  <SomeComponent />\n</Suspense>\n",
                          "codeHighlighted": "&lt;<span class=\"hljs-title class_\">Suspense</span> fallback={&lt;Loading /&gt;}&gt;\n  &lt;SomeComponent /&gt;\n&lt;/<span class=\"hljs-title class_\">Suspense</span>&gt;"
                        },
                        "homepage": {
                          "url": "https://react.dev/reference/react/Suspense"
                        }
                      }
                    },
                    {
                      "count": 25,
                      "id": "usetransition",
                      "percentageQuestion": 5.83,
                      "percentageSurvey": 0.19,
                      "entity": {
                        "name": "`useTransition`\n",
                        "nameHtml": "<code>useTransition</code>\n",
                        "nameClean": "useTransition",
                        "description": "`useTransition` is a React Hook that lets you update the state without blocking the UI.\n",
                        "descriptionHtml": "<code>useTransition</code> is a React Hook that lets you update the state without blocking the UI.\n",
                        "descriptionClean": "useTransition is a React Hook that lets you update the state without blocking the UI.",
                        "id": "usetransition",
                        "entityType": "feature",
                        "example": {
                          "language": "jsx",
                          "code": "const [isPending, startTransition] = useTransition()\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> [isPending, startTransition] = <span class=\"hljs-title function_\">useTransition</span>()"
                        },
                        "homepage": {
                          "url": "https://react.dev/reference/react/useTransition"
                        }
                      }
                    },
                    {
                      "count": 17,
                      "id": "taint_api",
                      "percentageQuestion": 3.96,
                      "percentageSurvey": 0.13,
                      "entity": {
                        "name": "Taint API",
                        "nameClean": "Taint API",
                        "id": "taint_api",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "taintObjectReference(message, object);\ntaintUniqueValue(errMessage, lifetime, value)\n",
                          "codeHighlighted": "<span class=\"hljs-title function_\">taintObjectReference</span>(message, object);\n<span class=\"hljs-title function_\">taintUniqueValue</span>(errMessage, lifetime, value)"
                        },
                        "homepage": {
                          "url": "https://react.dev/reference/react/experimental_taintObjectReference"
                        }
                      }
                    },
                    {
                      "count": 16,
                      "id": "lack_of_documentation",
                      "percentageQuestion": 3.73,
                      "percentageSurvey": 0.12,
                      "entity": {
                        "name": "Lack of documentation",
                        "nameClean": "Lack of documentation",
                        "description": "Lack of documentation or code examples",
                        "descriptionClean": "Lack of documentation or code examples",
                        "id": "lack_of_documentation",
                        "entityType": "default"
                      }
                    },
                    {
                      "count": 16,
                      "id": "useformstate",
                      "percentageQuestion": 3.73,
                      "percentageSurvey": 0.12,
                      "entity": {
                        "name": "useFormState",
                        "nameClean": "useFormState",
                        "id": "useformstate",
                        "entityType": "feature",
                        "example": {
                          "language": "js",
                          "code": "const [state, formAction] = useFormState(fn, initialState);\n",
                          "codeHighlighted": "<span class=\"hljs-keyword\">const</span> [state, formAction] = <span class=\"hljs-title function_\">useFormState</span>(fn, initialState);"
                        },
                        "homepage": {
                          "url": "https://react.dev/reference/react-dom/hooks/useFormState"
                        }
                      }
                    },
                    {
                      "count": 12574,
                      "id": "no_answer",
                      "percentageQuestion": 0,
                      "percentageSurvey": 96.7,
                      "entity": {
                        "entityType": "default"
                      }
                    },
                    {
                      "count": 394,
                      "id": "other_answers",
                      "percentageQuestion": 91.82,
                      "percentageSurvey": 3.13,
                      "groupedBuckets": [
                        {
                          "count": 49,
                          "id": "overlimit_answers",
                          "percentageQuestion": 11.42,
                          "percentageSurvey": 0.38
                        },
                        {
                          "count": 195,
                          "id": "cutoff_answers",
                          "percentageQuestion": 45.43,
                          "percentageSurvey": 1.6
                        },
                        {
                          "count": 150,
                          "id": "no_match",
                          "percentageQuestion": 34.97,
                          "percentageSurvey": 1.15,
                          "entity": {
                            "entityType": "default"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}