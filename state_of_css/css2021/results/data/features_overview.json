{
  "dataAPI": {
    "survey": {
      "features_overview": [
        {
          "id": "grid",
          "entity": {
            "name": "Grid",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-grid",
              "url": "https://caniuse.com/css-grid"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout",
              "title": "CSS Grid Layout",
              "summary": "CSS Grid Layout excels at dividing a page into major regions or defining the relationship in terms of size, position, and layer, between parts of a control built from HTML primitives."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 8125,
                "percentage_survey": 93.3
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 6746,
                      "percentage_question": 83.1,
                      "percentage_survey": 77.5
                    },
                    {
                      "id": "heard",
                      "count": 1329,
                      "percentage_question": 16.4,
                      "percentage_survey": 15.3
                    },
                    {
                      "id": "never_heard",
                      "count": 50,
                      "percentage_question": 0.7,
                      "percentage_survey": 0.6
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "subgrid",
          "entity": {
            "name": "Subgrid",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-subgrid",
              "url": "https://caniuse.com/css-subgrid"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Subgrid",
              "title": "Subgrid",
              "summary": "Level 2 of the CSS Grid Layout specification includes a subgrid value for grid-template-columns and grid-template-rows. This guide details what subgrid does, and gives some use cases and design patterns that are solved by the feature."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 8102,
                "percentage_survey": 93
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "heard",
                      "count": 4639,
                      "percentage_question": 57.3,
                      "percentage_survey": 53.3
                    },
                    {
                      "id": "never_heard",
                      "count": 2439,
                      "percentage_question": 30.2,
                      "percentage_survey": 28
                    },
                    {
                      "id": "used",
                      "count": 1024,
                      "percentage_question": 12.7,
                      "percentage_survey": 11.8
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "flexbox",
          "entity": {
            "name": "Flexbox",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "flexbox",
              "url": "https://caniuse.com/flexbox"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout",
              "title": "CSS Flexible Box Layout",
              "summary": "CSS Flexible Box Layout is a module of CSS that defines a CSS box model optimized for user interface design, and the layout of items in one dimension. In the flex layout model, the children of a flex container can be laid out in any direction, and can \"flex\" their sizes, either growing to fill unused space or shrinking to avoid overflowing the parent. Both horizontal and vertical alignment of the children can be easily manipulated."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 8095,
                "percentage_survey": 93
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 7987,
                      "percentage_question": 98.7,
                      "percentage_survey": 91.7
                    },
                    {
                      "id": "heard",
                      "count": 87,
                      "percentage_question": 1.1,
                      "percentage_survey": 1
                    },
                    {
                      "id": "never_heard",
                      "count": 21,
                      "percentage_question": 0.3,
                      "percentage_survey": 0.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "multi_column",
          "entity": {
            "name": "Multi-Column Layout",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "multicolumn",
              "url": "https://caniuse.com/multicolumn"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Columns",
              "title": "CSS Multi-column Layout",
              "summary": "CSS Multi-column Layout is a module of CSS that adds support for multi-column layouts. Support is included for establishing the number of columns in a layout, as well as how content should flow from column to column, gap sizes between columns, and column dividing lines (known as column rules) along with their appearance."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 8087,
                "percentage_survey": 92.9
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 3136,
                      "percentage_question": 38.8,
                      "percentage_survey": 36
                    },
                    {
                      "id": "never_heard",
                      "count": 3005,
                      "percentage_question": 37.2,
                      "percentage_survey": 34.5
                    },
                    {
                      "id": "heard",
                      "count": 1946,
                      "percentage_question": 24.1,
                      "percentage_survey": 22.4
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "writing_modes",
          "entity": {
            "name": "Writing Modes",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-writing-mode",
              "url": "https://caniuse.com/css-writing-mode"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Writing_Modes",
              "title": "CSS Writing Modes",
              "summary": "CSS Writing Modes is a CSS module that defines various international writing modes, such as left-to-right (e.g. used by Latin and Indic scripts), right-to-left (e.g. used by Hebrew or Arabic scripts), bidirectional (used when mixing left-to-right and right-to-left scripts) and vertical (e.g. used by some Asian scripts)."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 8094,
                "percentage_survey": 93
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 4635,
                      "percentage_question": 57.3,
                      "percentage_survey": 53.3
                    },
                    {
                      "id": "heard",
                      "count": 2218,
                      "percentage_question": 27.5,
                      "percentage_survey": 25.5
                    },
                    {
                      "id": "used",
                      "count": 1241,
                      "percentage_question": 15.4,
                      "percentage_survey": 14.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "position_sticky",
          "entity": {
            "name": "CSS position:sticky",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-sticky",
              "url": "https://caniuse.com/css-sticky"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/position",
              "title": "position",
              "summary": "The position CSS property sets how an element is positioned in a document. The top, right, bottom, and left properties determine the final location of positioned elements."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 8084,
                "percentage_survey": 92.8
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 6747,
                      "percentage_question": 83.5,
                      "percentage_survey": 77.5
                    },
                    {
                      "id": "heard",
                      "count": 1087,
                      "percentage_question": 13.5,
                      "percentage_survey": 12.5
                    },
                    {
                      "id": "never_heard",
                      "count": 250,
                      "percentage_question": 3.1,
                      "percentage_survey": 2.9
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "logical_properties",
          "entity": {
            "name": "CSS Logical Properties",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-logical-props",
              "url": "https://caniuse.com/css-logical-props"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Logical_Properties",
              "title": "CSS Logical Properties and Values",
              "summary": "CSS Logical Properties and Values is a module of CSS introducing logical properties and values that provide the ability to control layout through logical, rather than physical, direction and dimension mappings."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 8090,
                "percentage_survey": 92.9
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 3749,
                      "percentage_question": 46.4,
                      "percentage_survey": 43.1
                    },
                    {
                      "id": "heard",
                      "count": 2921,
                      "percentage_question": 36.2,
                      "percentage_survey": 33.6
                    },
                    {
                      "id": "used",
                      "count": 1420,
                      "percentage_question": 17.6,
                      "percentage_survey": 16.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "aspect_ratio",
          "entity": {
            "name": "CSS property: aspect-ratio",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "mdn-css_properties_aspect-ratio",
              "url": "https://caniuse.com/mdn-css_properties_aspect-ratio"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/aspect-ratio",
              "title": "aspect-ratio",
              "summary": "The aspect-ratio CSS property sets a preferred aspect ratio for the box, which will be used in the calculation of auto sizes and some other layout functions."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 8095,
                "percentage_survey": 93
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "heard",
                      "count": 3731,
                      "percentage_question": 46.1,
                      "percentage_survey": 42.9
                    },
                    {
                      "id": "used",
                      "count": 2997,
                      "percentage_question": 37.1,
                      "percentage_survey": 34.5
                    },
                    {
                      "id": "never_heard",
                      "count": 1367,
                      "percentage_question": 16.9,
                      "percentage_survey": 15.7
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "content_visibility",
          "entity": {
            "name": "CSS content-visibility",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-content-visibility",
              "url": "https://caniuse.com/css-content-visibility"
            },
            "mdn": null
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 8064,
                "percentage_survey": 92.6
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 3446,
                      "percentage_question": 42.8,
                      "percentage_survey": 39.6
                    },
                    {
                      "id": "heard",
                      "count": 2665,
                      "percentage_question": 33.1,
                      "percentage_survey": 30.6
                    },
                    {
                      "id": "used",
                      "count": 1953,
                      "percentage_question": 24.3,
                      "percentage_survey": 22.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "flexbox_gap",
          "entity": {
            "name": "Flexbox Gap",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "flexbox-gap",
              "url": "https://caniuse.com/flexbox-gap"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/gap",
              "title": "gap (grid-gap)",
              "summary": "The gap CSS property sets the gaps (gutters) between rows and columns. It is a shorthand for row-gap and column-gap."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 8079,
                "percentage_survey": 92.8
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 4440,
                      "percentage_question": 55,
                      "percentage_survey": 51
                    },
                    {
                      "id": "heard",
                      "count": 1964,
                      "percentage_question": 24.4,
                      "percentage_survey": 22.6
                    },
                    {
                      "id": "never_heard",
                      "count": 1675,
                      "percentage_question": 20.8,
                      "percentage_survey": 19.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "break_rules",
          "entity": {
            "name": "Break Rules",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "mdn-css_properties_break-before_paged_context",
              "url": "https://caniuse.com/mdn-css_properties_break-before_paged_context"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/break-before",
              "title": "break-before",
              "summary": "The break-before CSS property sets how page, column, or region breaks should behave before a generated box. If there is no generated box, the property is ignored."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 8084,
                "percentage_survey": 92.8
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 4568,
                      "percentage_question": 56.6,
                      "percentage_survey": 52.5
                    },
                    {
                      "id": "used",
                      "count": 1952,
                      "percentage_question": 24.2,
                      "percentage_survey": 22.5
                    },
                    {
                      "id": "heard",
                      "count": 1564,
                      "percentage_question": 19.4,
                      "percentage_survey": 18
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "at_container",
          "entity": {
            "name": "CSS property: @container",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-container-queries",
              "url": "https://caniuse.com/css-container-queries"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Container_Queries",
              "title": "CSS Container Queries",
              "summary": "When creating a responsive design you often use a media query to change the document layout based on the size of the viewport."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 8098,
                "percentage_survey": 93
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "heard",
                      "count": 4387,
                      "percentage_question": 54.2,
                      "percentage_survey": 50.4
                    },
                    {
                      "id": "never_heard",
                      "count": 3276,
                      "percentage_question": 40.5,
                      "percentage_survey": 37.7
                    },
                    {
                      "id": "used",
                      "count": 435,
                      "percentage_question": 5.4,
                      "percentage_survey": 5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "shapes",
          "entity": {
            "name": "Shapes",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-shapes",
              "url": "https://caniuse.com/css-shapes"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Shapes",
              "title": "CSS Shapes",
              "summary": "CSS Shapes describe geometric shapes for use in CSS. For the Level 1 specification, CSS Shapes can be applied to floating elements. The specification defines a number of different ways to define a shape on a floated element, causing wrapping lines to wrap round the shape rather than following the rectangle of the element's box."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7497,
                "percentage_survey": 86.1
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 3112,
                      "percentage_question": 41.6,
                      "percentage_survey": 35.8
                    },
                    {
                      "id": "heard",
                      "count": 2641,
                      "percentage_question": 35.3,
                      "percentage_survey": 30.4
                    },
                    {
                      "id": "used",
                      "count": 1744,
                      "percentage_question": 23.3,
                      "percentage_survey": 20.1
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "object_fit",
          "entity": {
            "name": "object-fit",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "object-fit",
              "url": "https://caniuse.com/object-fit"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/object-fit",
              "title": "object-fit",
              "summary": "The object-fit CSS property sets how the content of a replaced element, such as an <img> or <video>, should be resized to fit its container."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7545,
                "percentage_survey": 86.7
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 5216,
                      "percentage_question": 69.2,
                      "percentage_survey": 59.9
                    },
                    {
                      "id": "never_heard",
                      "count": 1329,
                      "percentage_question": 17.7,
                      "percentage_survey": 15.3
                    },
                    {
                      "id": "heard",
                      "count": 1000,
                      "percentage_question": 13.3,
                      "percentage_survey": 11.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "clip_path",
          "entity": {
            "name": "clip-path",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-clip-path",
              "url": "https://caniuse.com/css-clip-path"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/clip-path",
              "title": "clip-path",
              "summary": "The clip-path CSS property creates a clipping region that sets what part of an element should be shown. Parts that are inside the region are shown, while those outside are hidden."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7546,
                "percentage_survey": 86.7
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 4226,
                      "percentage_question": 56.1,
                      "percentage_survey": 48.6
                    },
                    {
                      "id": "heard",
                      "count": 2256,
                      "percentage_question": 29.9,
                      "percentage_survey": 25.9
                    },
                    {
                      "id": "never_heard",
                      "count": 1064,
                      "percentage_question": 14.2,
                      "percentage_survey": 12.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "masks",
          "entity": {
            "name": "Masking",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-masks",
              "url": "https://caniuse.com/css-masks"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Masking",
              "title": "CSS Masking",
              "summary": "CSS Masking is a CSS module that defines means, including masking and clipping, for partially or fully hiding portions of visual elements."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7535,
                "percentage_survey": 86.5
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "heard",
                      "count": 2912,
                      "percentage_question": 38.7,
                      "percentage_survey": 33.5
                    },
                    {
                      "id": "used",
                      "count": 2543,
                      "percentage_question": 33.8,
                      "percentage_survey": 29.2
                    },
                    {
                      "id": "never_heard",
                      "count": 2080,
                      "percentage_question": 27.7,
                      "percentage_survey": 23.9
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "blend_modes",
          "entity": {
            "name": "blend-mode",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-mixblendmode",
              "url": "https://caniuse.com/css-mixblendmode"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/blend-mode",
              "title": "<blend-mode>",
              "summary": "The <blend-mode> CSS data type describes how colors should appear when elements overlap. It is used in the background-blend-mode and mix-blend-mode properties."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7548,
                "percentage_survey": 86.7
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 2936,
                      "percentage_question": 38.9,
                      "percentage_survey": 33.8
                    },
                    {
                      "id": "never_heard",
                      "count": 2395,
                      "percentage_question": 31.8,
                      "percentage_survey": 27.5
                    },
                    {
                      "id": "heard",
                      "count": 2217,
                      "percentage_question": 29.4,
                      "percentage_survey": 25.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "filter_effects",
          "entity": {
            "name": "Filters & Effects",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-filters",
              "url": "https://caniuse.com/css-filters"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/filter",
              "title": "filter",
              "summary": "The filter CSS property applies graphical effects like blur or color shift to an element. Filters are commonly used to adjust the rendering of images, backgrounds, and borders."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7536,
                "percentage_survey": 86.6
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 4962,
                      "percentage_question": 65.9,
                      "percentage_survey": 57
                    },
                    {
                      "id": "heard",
                      "count": 1638,
                      "percentage_question": 21.8,
                      "percentage_survey": 18.9
                    },
                    {
                      "id": "never_heard",
                      "count": 936,
                      "percentage_question": 12.5,
                      "percentage_survey": 10.8
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "backdrop_filter",
          "entity": {
            "name": "backdrop-filter",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-backdrop-filter",
              "url": "https://caniuse.com/css-backdrop-filter"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/backdrop-filter",
              "title": "backdrop-filter",
              "summary": "The backdrop-filter CSS property lets you apply graphical effects such as blurring or color shifting to the area behind an element. Because it applies to everything behind the element, to see the effect you must make the element or its background at least partially transparent."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7536,
                "percentage_survey": 86.6
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 3037,
                      "percentage_question": 40.3,
                      "percentage_survey": 34.9
                    },
                    {
                      "id": "used",
                      "count": 2710,
                      "percentage_question": 36,
                      "percentage_survey": 31.2
                    },
                    {
                      "id": "heard",
                      "count": 1789,
                      "percentage_question": 23.8,
                      "percentage_survey": 20.6
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "color_gamut",
          "entity": {
            "name": "`@media (color-gamut)`",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "mdn-css_at-rules_media_color-gamut",
              "url": "https://caniuse.com/mdn-css_at-rules_media_color-gamut"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/color-gamut",
              "title": "color-gamut",
              "summary": "The color-gamut CSS media feature can be used to test the approximate range of colors that are supported by the user agent and the output device."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7544,
                "percentage_survey": 86.6
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 6124,
                      "percentage_question": 81.2,
                      "percentage_survey": 70.3
                    },
                    {
                      "id": "heard",
                      "count": 1301,
                      "percentage_question": 17.3,
                      "percentage_survey": 15
                    },
                    {
                      "id": "used",
                      "count": 119,
                      "percentage_question": 1.6,
                      "percentage_survey": 1.4
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "perspective",
          "entity": {
            "name": "Perspective",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "mdn-api_cssperspective",
              "url": "https://caniuse.com/mdn-api_cssperspective"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/perspective",
              "title": "perspective",
              "summary": "The perspective CSS property determines the distance between the z=0 plane and the user in order to give a 3D-positioned element some perspective."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7534,
                "percentage_survey": 86.5
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 3904,
                      "percentage_question": 51.9,
                      "percentage_survey": 44.9
                    },
                    {
                      "id": "used",
                      "count": 1990,
                      "percentage_question": 26.5,
                      "percentage_survey": 22.9
                    },
                    {
                      "id": "heard",
                      "count": 1640,
                      "percentage_question": 21.8,
                      "percentage_survey": 18.9
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "intrinsic_sizing",
          "entity": {
            "name": "Intrinsic Sizing",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "intrinsic-width",
              "url": "https://caniuse.com/intrinsic-width"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/min-content",
              "title": "min-content",
              "summary": "The min-content sizing keyword represents the intrinsic minimum width of the content. For text content this means that the content will take all soft-wrapping opportunities, becoming as small as the longest word."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7555,
                "percentage_survey": 86.8
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 3601,
                      "percentage_question": 47.7,
                      "percentage_survey": 41.4
                    },
                    {
                      "id": "never_heard",
                      "count": 2432,
                      "percentage_question": 32.2,
                      "percentage_survey": 28
                    },
                    {
                      "id": "heard",
                      "count": 1522,
                      "percentage_question": 20.2,
                      "percentage_survey": 17.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "conic_gradient",
          "entity": {
            "name": "conic-gradient()",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "mdn-css_types_image_gradient_conic-gradient",
              "url": "https://caniuse.com/mdn-css_types_image_gradient_conic-gradient"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/gradient/conic-gradient",
              "title": "conic-gradient()",
              "summary": "The conic-gradient() CSS function creates an image consisting of a gradient with color transitions rotated around a center point (rather than radiating from the center). Example conic gradients include pie charts and color wheels. The result of the conic-gradient() function is an object of the <gradient> data type, which is a special kind of <image>."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7541,
                "percentage_survey": 86.6
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 4522,
                      "percentage_question": 60,
                      "percentage_survey": 52
                    },
                    {
                      "id": "heard",
                      "count": 2309,
                      "percentage_question": 30.7,
                      "percentage_survey": 26.6
                    },
                    {
                      "id": "used",
                      "count": 710,
                      "percentage_question": 9.5,
                      "percentage_survey": 8.2
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "color_function",
          "entity": {
            "name": "`color()` (Predefined Colorspaces)",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-color-function",
              "url": "https://caniuse.com/css-color-function"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color",
              "title": "color()",
              "summary": "The color() functional notation allows a color to be specified in a particular, specified colorspace rather than the implicit sRGB colorspace that most of the other color functions operate in."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7555,
                "percentage_survey": 86.8
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 4596,
                      "percentage_question": 60.9,
                      "percentage_survey": 52.8
                    },
                    {
                      "id": "heard",
                      "count": 1796,
                      "percentage_question": 23.8,
                      "percentage_survey": 20.7
                    },
                    {
                      "id": "used",
                      "count": 1163,
                      "percentage_question": 15.4,
                      "percentage_survey": 13.4
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "accent_color",
          "entity": {
            "name": "accent-color",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "mdn-css_properties_accent-color",
              "url": "https://caniuse.com/mdn-css_properties_accent-color"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/accent-color",
              "title": "accent-color",
              "summary": "The accent-color CSS property sets the accent color for user-interface controls generated by some elements."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7565,
                "percentage_survey": 86.9
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 4672,
                      "percentage_question": 61.8,
                      "percentage_survey": 53.7
                    },
                    {
                      "id": "heard",
                      "count": 2350,
                      "percentage_question": 31.1,
                      "percentage_survey": 27
                    },
                    {
                      "id": "used",
                      "count": 543,
                      "percentage_question": 7.2,
                      "percentage_survey": 6.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "scroll_snap",
          "entity": {
            "name": "Scroll Snap",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-snappoints",
              "url": "https://caniuse.com/css-snappoints"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Scroll_Snap",
              "title": "CSS Scroll Snap",
              "summary": "CSS Scroll Snap is a module of CSS that introduces scroll snap positions, which enforce the scroll positions that a scroll container's scrollport may end at after a scrolling operation has completed."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7211,
                "percentage_survey": 82.8
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 2555,
                      "percentage_question": 35.5,
                      "percentage_survey": 29.4
                    },
                    {
                      "id": "heard",
                      "count": 2495,
                      "percentage_question": 34.6,
                      "percentage_survey": 28.7
                    },
                    {
                      "id": "used",
                      "count": 2161,
                      "percentage_question": 30,
                      "percentage_survey": 24.9
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "overscroll_behavior",
          "entity": {
            "name": "overscroll-behavior",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-overscroll-behavior",
              "url": "https://caniuse.com/css-overscroll-behavior"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/overscroll-behavior",
              "title": "overscroll-behavior",
              "summary": "The overscroll-behavior CSS property sets what a browser does when reaching the boundary of a scrolling area. It's a shorthand for overscroll-behavior-x and overscroll-behavior-y."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7258,
                "percentage_survey": 83.4
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 3860,
                      "percentage_question": 53.2,
                      "percentage_survey": 44.4
                    },
                    {
                      "id": "used",
                      "count": 1730,
                      "percentage_question": 23.9,
                      "percentage_survey": 19.9
                    },
                    {
                      "id": "heard",
                      "count": 1668,
                      "percentage_question": 23,
                      "percentage_survey": 19.2
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "overflow_anchor",
          "entity": {
            "name": "overflow-anchor",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-overflow-anchor",
              "url": "https://caniuse.com/css-overflow-anchor"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/overflow-anchor",
              "title": "overflow-anchor",
              "summary": "The overflow-anchor CSS property provides a way to opt out of the browser's scroll anchoring behavior, which adjusts scroll position to minimize content shifts."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7263,
                "percentage_survey": 83.4
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 5557,
                      "percentage_question": 76.6,
                      "percentage_survey": 63.8
                    },
                    {
                      "id": "heard",
                      "count": 1145,
                      "percentage_question": 15.8,
                      "percentage_survey": 13.2
                    },
                    {
                      "id": "used",
                      "count": 561,
                      "percentage_question": 7.8,
                      "percentage_survey": 6.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "touch_action",
          "entity": {
            "name": "touch-action",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-touch-action",
              "url": "https://caniuse.com/css-touch-action"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action",
              "title": "touch-action",
              "summary": "The touch-action CSS property sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser)."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7264,
                "percentage_survey": 83.4
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 4550,
                      "percentage_question": 62.7,
                      "percentage_survey": 52.3
                    },
                    {
                      "id": "heard",
                      "count": 1489,
                      "percentage_question": 20.5,
                      "percentage_survey": 17.1
                    },
                    {
                      "id": "used",
                      "count": 1225,
                      "percentage_question": 16.9,
                      "percentage_survey": 14.1
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "pointer_events",
          "entity": {
            "name": "pointer-events",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "pointer-events",
              "url": "https://caniuse.com/pointer-events"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/pointer-events",
              "title": "pointer-events",
              "summary": "The pointer-events CSS property sets under what circumstances (if any) a particular graphic element can become the target of pointer events."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7285,
                "percentage_survey": 83.7
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 5136,
                      "percentage_question": 70.6,
                      "percentage_survey": 59
                    },
                    {
                      "id": "never_heard",
                      "count": 1357,
                      "percentage_question": 18.7,
                      "percentage_survey": 15.6
                    },
                    {
                      "id": "heard",
                      "count": 792,
                      "percentage_question": 10.9,
                      "percentage_survey": 9.1
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "scroll_timeline",
          "entity": {
            "name": "@scroll-timeline",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-scroll-timeline",
              "url": "https://caniuse.com/css-scroll-timeline"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@scroll-timeline",
              "title": "@scroll-timeline",
              "summary": "The @scroll-timeline CSS at-rule defines an AnimationTimeline whose time values are determined by scrolling progress within a scroll container and not by minutes or seconds. Once specified, a scroll timeline is associated with a CSS Animation by using the animation-timeline property."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7284,
                "percentage_survey": 83.7
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 6092,
                      "percentage_question": 83.7,
                      "percentage_survey": 70
                    },
                    {
                      "id": "heard",
                      "count": 1014,
                      "percentage_question": 14,
                      "percentage_survey": 11.7
                    },
                    {
                      "id": "used",
                      "count": 178,
                      "percentage_question": 2.5,
                      "percentage_survey": 2.1
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "font_variant",
          "entity": {
            "name": "font-variant",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "font-variant-alternates",
              "url": "https://caniuse.com/font-variant-alternates"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant",
              "title": "font-variant",
              "summary": "The font-variant CSS shorthand property allows you to set all the font variants for a font."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7108,
                "percentage_survey": 81.6
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 3729,
                      "percentage_question": 52.5,
                      "percentage_survey": 42.9
                    },
                    {
                      "id": "heard",
                      "count": 1960,
                      "percentage_question": 27.6,
                      "percentage_survey": 22.5
                    },
                    {
                      "id": "used",
                      "count": 1419,
                      "percentage_question": 20,
                      "percentage_survey": 16.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "initial_letter",
          "entity": {
            "name": "initial-letter",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-initial-letter",
              "url": "https://caniuse.com/css-initial-letter"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/initial-letter",
              "title": "initial-letter",
              "summary": "The initial-letter CSS property sets styling for dropped, raised, and sunken initial letters."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7149,
                "percentage_survey": 82.1
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 2908,
                      "percentage_question": 40.7,
                      "percentage_survey": 33.4
                    },
                    {
                      "id": "heard",
                      "count": 2538,
                      "percentage_question": 35.6,
                      "percentage_survey": 29.2
                    },
                    {
                      "id": "used",
                      "count": 1703,
                      "percentage_question": 23.9,
                      "percentage_survey": 19.6
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "font_variant_numeric",
          "entity": {
            "name": "font-variant-numeric",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "font-variant-numeric",
              "url": "https://caniuse.com/font-variant-numeric"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-numeric",
              "title": "font-variant-numeric",
              "summary": "The font-variant-numeric CSS property controls the usage of alternate glyphs for numbers, fractions, and ordinal markers."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7160,
                "percentage_survey": 82.2
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 5022,
                      "percentage_question": 70.2,
                      "percentage_survey": 57.7
                    },
                    {
                      "id": "heard",
                      "count": 1239,
                      "percentage_question": 17.4,
                      "percentage_survey": 14.3
                    },
                    {
                      "id": "used",
                      "count": 899,
                      "percentage_question": 12.6,
                      "percentage_survey": 10.4
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "font_display",
          "entity": {
            "name": "font-display",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-font-rendering-controls",
              "url": "https://caniuse.com/css-font-rendering-controls"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display",
              "title": "font-display",
              "summary": "The font-display descriptor determines how a font face is displayed based on whether and when it is downloaded and ready to use."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7173,
                "percentage_survey": 82.4
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 3174,
                      "percentage_question": 44.3,
                      "percentage_survey": 36.5
                    },
                    {
                      "id": "used",
                      "count": 2784,
                      "percentage_question": 38.9,
                      "percentage_survey": 32
                    },
                    {
                      "id": "heard",
                      "count": 1215,
                      "percentage_question": 17,
                      "percentage_survey": 14
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "line_clamp",
          "entity": {
            "name": "line-clamp",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-line-clamp",
              "url": "https://caniuse.com/css-line-clamp"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-line-clamp",
              "title": "-webkit-line-clamp",
              "summary": "The -webkit-line-clamp CSS property allows limiting of the contents of a block container to the specified number of lines."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7175,
                "percentage_survey": 82.4
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 3554,
                      "percentage_question": 49.6,
                      "percentage_survey": 40.8
                    },
                    {
                      "id": "used",
                      "count": 2112,
                      "percentage_question": 29.5,
                      "percentage_survey": 24.3
                    },
                    {
                      "id": "heard",
                      "count": 1509,
                      "percentage_question": 21.1,
                      "percentage_survey": 17.4
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "variable_fonts",
          "entity": {
            "name": "Variable Fonts",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "variable-fonts",
              "url": "https://caniuse.com/variable-fonts"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Fonts/Variable_Fonts_Guide",
              "title": "Variable fonts guide",
              "summary": "Variable fonts are an evolution of the OpenType font specification that enables many different variations of a typeface to be incorporated into a single file, rather than having a separate font file for every width, weight, or style. They let you access all the variations contained in a given font file via CSS and a single @font-face reference. This article will give you all you need to know to get you started using variable fonts."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7194,
                "percentage_survey": 82.6
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 2906,
                      "percentage_question": 40.4,
                      "percentage_survey": 33.4
                    },
                    {
                      "id": "heard",
                      "count": 2785,
                      "percentage_question": 38.8,
                      "percentage_survey": 32
                    },
                    {
                      "id": "used",
                      "count": 1503,
                      "percentage_question": 20.9,
                      "percentage_survey": 17.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "prefers_reduced_motion",
          "entity": {
            "name": "prefers-reduced-motion",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "prefers-reduced-motion",
              "url": "https://caniuse.com/prefers-reduced-motion"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion",
              "title": "prefers-reduced-motion",
              "summary": "The prefers-reduced-motion CSS media feature is used to detect if the user has requested that the system minimize the amount of non-essential motion it uses."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7007,
                "percentage_survey": 80.5
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 2653,
                      "percentage_question": 37.9,
                      "percentage_survey": 30.5
                    },
                    {
                      "id": "heard",
                      "count": 2488,
                      "percentage_question": 35.6,
                      "percentage_survey": 28.6
                    },
                    {
                      "id": "used",
                      "count": 1866,
                      "percentage_question": 26.7,
                      "percentage_survey": 21.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "prefers_color_scheme",
          "entity": {
            "name": "prefers-color-scheme",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "prefers-color-scheme",
              "url": "https://caniuse.com/prefers-color-scheme"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-color-scheme",
              "title": "prefers-color-scheme",
              "summary": "The prefers-color-scheme CSS media feature is used to detect if the user has requested a light or dark color theme."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7067,
                "percentage_survey": 81.2
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 2557,
                      "percentage_question": 36.2,
                      "percentage_survey": 29.4
                    },
                    {
                      "id": "heard",
                      "count": 2494,
                      "percentage_question": 35.3,
                      "percentage_survey": 28.7
                    },
                    {
                      "id": "used",
                      "count": 2016,
                      "percentage_question": 28.6,
                      "percentage_survey": 23.2
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "prefers_reduced_data",
          "entity": {
            "name": "prefers-reduced-data",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "mdn-css_at-rules_media_prefers-reduced-data",
              "url": "https://caniuse.com/mdn-css_at-rules_media_prefers-reduced-data"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-data",
              "title": "prefers-reduced-data",
              "summary": "The prefers-reduced-data CSS media feature is used to detect if the user has requested the web content that consumes less internet traffic."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7077,
                "percentage_survey": 81.3
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 4540,
                      "percentage_question": 64.2,
                      "percentage_survey": 52.2
                    },
                    {
                      "id": "heard",
                      "count": 2262,
                      "percentage_question": 32,
                      "percentage_survey": 26
                    },
                    {
                      "id": "used",
                      "count": 275,
                      "percentage_question": 3.9,
                      "percentage_survey": 3.2
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "color_contrast",
          "entity": {
            "name": "color-contrast()",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "mdn-css_types_color_color-contrast",
              "url": "https://caniuse.com/mdn-css_types_color_color-contrast"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-contrast",
              "title": "color-contrast()",
              "summary": "The color-contrast() functional notation takes a color value and compares it to a list of other color values, selecting the one with the highest contrast from the list."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7076,
                "percentage_survey": 81.3
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 5241,
                      "percentage_question": 74.1,
                      "percentage_survey": 60.2
                    },
                    {
                      "id": "heard",
                      "count": 1597,
                      "percentage_question": 22.6,
                      "percentage_survey": 18.4
                    },
                    {
                      "id": "used",
                      "count": 238,
                      "percentage_question": 3.4,
                      "percentage_survey": 2.8
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "color_scheme",
          "entity": {
            "name": "color-scheme",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "mdn-css_properties_color-scheme",
              "url": "https://caniuse.com/mdn-css_properties_color-scheme"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme",
              "title": "color-scheme",
              "summary": "The color-scheme CSS property allows an element to indicate which color schemes it can comfortably be rendered in."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7076,
                "percentage_survey": 81.3
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 4992,
                      "percentage_question": 70.6,
                      "percentage_survey": 57.4
                    },
                    {
                      "id": "heard",
                      "count": 1563,
                      "percentage_question": 22.1,
                      "percentage_survey": 18
                    },
                    {
                      "id": "used",
                      "count": 521,
                      "percentage_question": 7.4,
                      "percentage_survey": 6
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "tabindex",
          "entity": {
            "name": "tabindex",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "tabindex-attr",
              "url": "https://caniuse.com/tabindex-attr"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex",
              "title": "tabindex",
              "summary": "The tabindex global attribute indicates that its element can be focused, and where it participates in sequential keyboard navigation (usually with the Tab key, hence the name)."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7098,
                "percentage_survey": 81.5
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 5191,
                      "percentage_question": 73.2,
                      "percentage_survey": 59.6
                    },
                    {
                      "id": "heard",
                      "count": 1000,
                      "percentage_question": 14.1,
                      "percentage_survey": 11.5
                    },
                    {
                      "id": "never_heard",
                      "count": 907,
                      "percentage_question": 12.8,
                      "percentage_survey": 10.5
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "aria_attributes",
          "entity": {
            "name": "ARIA attributes",
            "homepage": {
              "url": null
            },
            "caniuse": null,
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA",
              "title": "ARIA",
              "summary": "Accessible Rich Internet Applications (ARIA) is a set of roles and attributes that define ways to make web content and web applications (especially those developed with JavaScript) more accessible to people with disabilities."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7112,
                "percentage_survey": 81.7
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 5658,
                      "percentage_question": 79.6,
                      "percentage_survey": 65
                    },
                    {
                      "id": "heard",
                      "count": 950,
                      "percentage_question": 13.4,
                      "percentage_survey": 11
                    },
                    {
                      "id": "never_heard",
                      "count": 504,
                      "percentage_question": 7.1,
                      "percentage_survey": 5.8
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "variables",
          "entity": {
            "name": "Variables",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-variables",
              "url": "https://caniuse.com/css-variables"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Variables",
              "title": "CSS Custom Properties for Cascading Variables",
              "summary": "CSS Custom Properties for Cascading Variables is a CSS module that allows for the creation of custom properties that can be used over and over."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 6965,
                "percentage_survey": 80
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 5876,
                      "percentage_question": 84.4,
                      "percentage_survey": 67.5
                    },
                    {
                      "id": "heard",
                      "count": 895,
                      "percentage_question": 12.9,
                      "percentage_survey": 10.3
                    },
                    {
                      "id": "never_heard",
                      "count": 194,
                      "percentage_question": 2.8,
                      "percentage_survey": 2.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "feature_support_queries",
          "entity": {
            "name": "@supports",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-supports-api",
              "url": "https://caniuse.com/css-supports-api"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@supports",
              "title": "@supports",
              "summary": "The @supports CSS at-rule lets you specify declarations that depend on a browser's support for one or more specific CSS features. This is called a feature query. The rule may be placed at the top level of your code or nested inside any other conditional group at-rule."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7026,
                "percentage_survey": 80.7
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 3226,
                      "percentage_question": 46,
                      "percentage_survey": 37.1
                    },
                    {
                      "id": "heard",
                      "count": 2080,
                      "percentage_question": 29.7,
                      "percentage_survey": 23.9
                    },
                    {
                      "id": "never_heard",
                      "count": 1720,
                      "percentage_question": 24.5,
                      "percentage_survey": 19.8
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "containment",
          "entity": {
            "name": "Contain",
            "homepage": {
              "url": null
            },
            "caniuse": null,
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/contain",
              "title": "contain",
              "summary": "The contain CSS property allows an author to indicate that an element and its contents are, as much as possible, independent of the rest of the document tree.\n  Containment allows the browser to calculate layout, style, paint, size, or any combination of them for a specific area of the DOM.\n  Changes within an element with containment applied are not propagated outside of the contained element to the rest of the page, leading to performance benefits through fewer DOM re-renders."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7041,
                "percentage_survey": 80.9
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 5083,
                      "percentage_question": 72.2,
                      "percentage_survey": 58.4
                    },
                    {
                      "id": "heard",
                      "count": 1288,
                      "percentage_question": 18.3,
                      "percentage_survey": 14.8
                    },
                    {
                      "id": "used",
                      "count": 670,
                      "percentage_question": 9.6,
                      "percentage_survey": 7.7
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "will_change",
          "entity": {
            "name": "will-change",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "will-change",
              "url": "https://caniuse.com/will-change"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/will-change",
              "title": "will-change",
              "summary": "The will-change CSS property hints to browsers how an element is expected to change. Browsers may set up optimizations before an element is actually changed. These kinds of optimizations can increase the responsiveness of a page by doing potentially expensive work before they are actually required."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7037,
                "percentage_survey": 80.8
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 3367,
                      "percentage_question": 47.9,
                      "percentage_survey": 38.7
                    },
                    {
                      "id": "used",
                      "count": 2357,
                      "percentage_question": 33.5,
                      "percentage_survey": 27.1
                    },
                    {
                      "id": "heard",
                      "count": 1313,
                      "percentage_question": 18.7,
                      "percentage_survey": 15.1
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "calc",
          "entity": {
            "name": "calc()",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "calc",
              "url": "https://caniuse.com/calc"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/calc",
              "title": "calc()",
              "summary": "The calc() CSS function lets you perform calculations when specifying CSS property values. It can be used anywhere a <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> is allowed."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7064,
                "percentage_survey": 81.1
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 6597,
                      "percentage_question": 93.4,
                      "percentage_survey": 75.8
                    },
                    {
                      "id": "heard",
                      "count": 354,
                      "percentage_question": 5.1,
                      "percentage_survey": 4.1
                    },
                    {
                      "id": "never_heard",
                      "count": 113,
                      "percentage_question": 1.6,
                      "percentage_survey": 1.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "houdini",
          "entity": {
            "name": "CSS Houdini",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-paint-api",
              "url": "https://caniuse.com/css-paint-api"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/Guide/Houdini",
              "title": "CSS Houdini",
              "summary": "Houdini is a set of low-level APIs that exposes parts of the CSS engine,\n  giving developers the power to extend CSS by hooking into the styling and layout process of a browser's rendering engine.\n  Houdini is a group of APIs that give developers direct access to the CSS Object Model (CSSOM),\n  enabling developers to write code the browser can parse as CSS,\n  thereby creating new CSS features without waiting for them to be implemented natively in browsers."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7041,
                "percentage_survey": 80.9
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 3680,
                      "percentage_question": 52.3,
                      "percentage_survey": 42.3
                    },
                    {
                      "id": "heard",
                      "count": 3108,
                      "percentage_question": 44.2,
                      "percentage_survey": 35.7
                    },
                    {
                      "id": "used",
                      "count": 253,
                      "percentage_question": 3.6,
                      "percentage_survey": 3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "comparison_functions",
          "entity": {
            "name": "CSS Comparison Functions",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-math-functions",
              "url": "https://caniuse.com/css-math-functions"
            },
            "mdn": null
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7058,
                "percentage_survey": 81.1
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "used",
                      "count": 4407,
                      "percentage_question": 62.5,
                      "percentage_survey": 50.6
                    },
                    {
                      "id": "heard",
                      "count": 1711,
                      "percentage_question": 24.3,
                      "percentage_survey": 19.7
                    },
                    {
                      "id": "never_heard",
                      "count": 940,
                      "percentage_question": 13.4,
                      "percentage_survey": 10.8
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "at_property",
          "entity": {
            "name": "@property",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "mdn-css_at-rules_property",
              "url": "https://caniuse.com/mdn-css_at-rules_property"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@property",
              "title": "@property",
              "summary": "The @property CSS at-rule is part of the CSS Houdini umbrella of APIs, it allows developers to explicitly define their css custom properties, allowing for property type checking, setting default values, and define whether a property can inherit values or not."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7053,
                "percentage_survey": 81
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 5141,
                      "percentage_question": 72.9,
                      "percentage_survey": 59.1
                    },
                    {
                      "id": "heard",
                      "count": 1626,
                      "percentage_question": 23.1,
                      "percentage_survey": 18.7
                    },
                    {
                      "id": "used",
                      "count": 286,
                      "percentage_question": 4.1,
                      "percentage_survey": 3.3
                    }
                  ]
                }
              ]
            }
          }
        },
        {
          "id": "marker",
          "entity": {
            "name": "::marker",
            "homepage": {
              "url": null
            },
            "caniuse": {
              "name": "css-marker-pseudo",
              "url": "https://caniuse.com/css-marker-pseudo"
            },
            "mdn": {
              "locale": "en-US",
              "url": "https://developer.mozilla.org/en-US/docs/Web/CSS/::marker",
              "title": "::marker",
              "summary": "The ::marker CSS pseudo-element selects the marker box of a list item, which typically contains a bullet or number. It works on any element or pseudo-element set to display: list-item, such as the <li> and <summary> elements."
            }
          },
          "experience": {
            "keys": [
              "never_heard",
              "heard",
              "used"
            ],
            "year": {
              "year": 2021,
              "completion": {
                "total": 8712,
                "count": 7059,
                "percentage_survey": 81.1
              },
              "facets": [
                {
                  "type": "default",
                  "id": "default",
                  "buckets": [
                    {
                      "id": "never_heard",
                      "count": 3303,
                      "percentage_question": 46.8,
                      "percentage_survey": 38
                    },
                    {
                      "id": "used",
                      "count": 2330,
                      "percentage_question": 33.1,
                      "percentage_survey": 26.8
                    },
                    {
                      "id": "heard",
                      "count": 1426,
                      "percentage_question": 20.3,
                      "percentage_survey": 16.4
                    }
                  ]
                }
              ]
            }
          }
        }
      ]
    }
  }
}